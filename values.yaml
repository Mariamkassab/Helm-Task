
master_metadata: 
  name: jenkins
  image: jenkins/jenkins:lts-jdk11
  rep: 1

init:
  - name: install-docker
    image: docker:stable
    command: ["cp", "/usr/local/bin/docker", "/data/docker"]
    volumename: docker
    mountPath: /data

  - name: install-kubectl
    image: eslamkarim/jenkins-ansible-kubectl
    command: ["cp", "/usr/local/bin/kubectl", "/data/kubectl"]
    volumename: kubectl
    mountPath: /data


httpGet:
  path: /login
  port: 8080
  scheme: HTTP
  
volumeMounts:
  - name: docker-sock
    subPath: 
    mountPath: /var/run   
  - name: data-disk
    subPath:
    mountPath: /var/jenkins_home
  - name: docker
    subPath: "docker"
    mountPath: "/usr/local/bin/docker"
  - name: kubectl
    subPath: "kubectl"
    mountPath: "/usr/local/bin/kubectl"
  
master_vol:
  v1_name: docker-sock
  path: /var/run 
  v2_name: data-disk 
  claimName: claim-jenkins
  v3_name: docker
  v4_name: kubectl

   
ports:
  - containerPort: 8080
    protocol: TCP
  - containerPort: 50000
    protocol: TCP


name_space:
  name: jenkins


slave_metadata:
  name: jenkins-ubuntu-slave
  sa:  jenkins-deployer
  image: mariamkassab/jenkins_slave:v3
  rep: 1

slave_svc:
  svc_name: jenkins-ubuntu-slave-svc
  protocol: TCP
  port: 22
  targetPort: 22

slave_vol:
  name: docker-sock
  path: /var/run/docker.sock

slave_vol_mount:
  mountPath: /var/run/docker.sock
  name: docker-sock

pv:
  name: pv-jenkins
  storage: 10Gi
  accessModes: ReadWriteOnce
  path: "/root/jen"

pvc:
  name: claim-jenkins
  storage: 10Gi
  accessModes: ReadWriteOnce

master_svc: 
  name: jenkins-nodeport
  protocol: TCP
  port: 80
  targetPort: 8080
  nodePort: 30009
  type: http







# # Default values for helm_lab.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.

# replicaCount: 1

# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   # Overrides the image tag whose default is the chart appVersion.
#   tag: ""

# imagePullSecrets: []
# nameOverride: ""
# fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

# podAnnotations: {}

# podSecurityContext: {}
#   # fsGroup: 2000

# securityContext: {}
#   # capabilities:
#   #   drop:
#   #   - ALL
#   # readOnlyRootFilesystem: true
#   # runAsNonRoot: true
#   # runAsUser: 1000

# service:
#   type: ClusterIP
#   port: 80

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#     # kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#   hosts:
#     - host: chart-example.local
#       paths:
#         - path: /
#           pathType: ImplementationSpecific
#   tls: []
#   #  - secretName: chart-example-tls
#   #    hosts:
#   #      - chart-example.local

# resources: {}
#   # We usually recommend not to specify default resources and to leave this as a conscious
#   # choice for the user. This also increases chances charts run on environments with little
#   # resources, such as Minikube. If you do want to specify resources, uncomment the following
#   # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#   # limits:
#   #   cpu: 100m
#   #   memory: 128Mi
#   # requests:
#   #   cpu: 100m
#   #   memory: 128Mi

# autoscaling:
#   enabled: false
#   minReplicas: 1
#   maxReplicas: 100
#   targetCPUUtilizationPercentage: 80
#   # targetMemoryUtilizationPercentage: 80

# nodeSelector: {}

# tolerations: []

# affinity: {}
